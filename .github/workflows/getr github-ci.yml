name: CI/CD Pipeline for Dockerized App

on:
  push:
    branches:
      - master  # Trigger on push to the main branch
  pull_request:
    branches:
      - master # Trigger on PRs to the main branch

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
    # Step 1: Checkout the code from the repository
    - name: Checkout code
      uses: actions/checkout@v2

    # Step 2: Set up Docker Buildx (for multi-platform builds)
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2

    # Step 3: Log in to Docker Hub (optional: for pushing to Docker Hub)
    - name: Log in to Docker Hub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    # Step 4: Build the Docker image
    - name: Build Docker image
      run: |
        docker build -t myapp:latest .

    # Step 5: Push the image to Docker Hub (Optional)
    - name: Push Docker image to Docker Hub
      run: |
        docker tag myapp:latest ${{ secrets.DOCKER_USERNAME }}/myapp:latest
        docker push ${{ secrets.DOCKER_USERNAME }}/myapp:latest

    # Step 6: Install sshpass (to allow SSH connection with password)
    - name: Install sshpass
      run: sudo apt-get install sshpass -y

    # Step 7: SSH into EC2 and deploy the Docker container
    - name: Deploy Docker container on EC2
      env:
        HOST: ${{ secrets.EC2_HOST }}
        USERNAME: ${{ secrets.EC2_USERNAME }}
        PASSWORD: ${{ secrets.EC2_PASSWORD }}
      run: |
        sshpass -p "$PASSWORD" ssh -o StrictHostKeyChecking=no $USERNAME@$HOST << EOF
        cd /path/to/your/project
        docker pull ${{ secrets.DOCKER_USERNAME }}/myapp:latest || true
        docker build -t myapp:latest .
        docker stop myapp || true
        docker rm myapp || true
        docker run -d --name myapp -p 80:80 myapp:latest
        EOF
